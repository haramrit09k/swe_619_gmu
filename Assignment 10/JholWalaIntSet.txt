package Assignment;

import java.util.*;

public class IntSet implements Cloneable {
    private List<Integer> els;

    @Override
    public boolean equals(Object obj) { // Standard recipe
        // if (!(obj instanceof IntSet)) return false;
        if (obj == null || obj.getClass() != getClass()) {
            return false;
        }
        IntSet s = (IntSet) obj;
        return s.els.size() == els.size() && s.els.containsAll(els);
    }

    @Override
    public int hashCode() {
        int hashVal = 0;
        for (Integer i : els) {
            hashVal = hashVal * 31 + i;
        }
        return hashVal;
    }

    public IntSet() {
        els = new ArrayList<Integer>();
    }

    private IntSet (List<Integer> list) { els = list; }

    @Override
    public IntSet clone() throws CloneNotSupportedException {
        IntSet clonedIntSet = (IntSet) super.clone();
        for (Integer i : els) {
            clonedIntSet.els.add(i);
        }
        return clonedIntSet;
    }
}

